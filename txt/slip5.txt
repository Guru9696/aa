
Q.1	Write a Java Program to implement Adapter pattern for Enumeration iterator[20 M]


import java.util.*;
class EnumerationIterator implements Iterator {
	Enumeration enumeration;

	public EnumerationIterator(Enumeration enumeration) {
		this.enumeration = enumeration;
	}

	public boolean hasNext() {
		return enumeration.hasMoreElements();
	}

	public Object next() {
		return enumeration.nextElement();
	}

	public void remove() {
		throw new UnsupportedOperationException();
	}
}

class slip5 {
	public static void main (String args[]) {
		Vector v = new Vector(Arrays.asList("apple","mango","grapes"));
		Iterator iterator = new EnumerationIterator(v.elements());
		while (iterator.hasNext()) {
			System.out.println(iterator.next());
		}
	}
}


Q.2	Write a python program to implement Multiple Linear Regression for given dataset.[20 M]

***sir code ***
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model

ps=pd.read_csv("Housing.csv")
ps.sample(10)

df = ps[['area','bedrooms','bathrooms','stories','price']]
df.sample(5)

model=linear_model.LinearRegression()
model.fit(df.drop('price',axis='columns'),df.price)

model.predict([[7400,3,2,4]])

***my code***
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
  
dataset = pd.read_csv('Salary_Data.csv')
dataset.head()
 
# data preprocessing
X = dataset.iloc[:, :-1].values  #independent variable array
y = dataset.iloc[:,1].values  #dependent variable vector
 
# splitting the dataset
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=1/3,random_state=0)
 
# fitting the regression model
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,y_train) #actually produces the linear eqn for the data
 
# predicting the test set results
y_pred = regressor.predict(X_test) 
y_pred
 
y_test
 
# visualizing the results
#plot for the TRAIN
  
plt.scatter(X_train, y_train, color='red') # plotting the observation line
plt.plot(X_train, regressor.predict(X_train), color='blue') # plotting the regression line
plt.title("Salary vs Experience (Training set)") # stating the title of the graph
  
plt.xlabel("Years of experience") # adding the name of x-axis
plt.ylabel("Salaries") # adding the name of y-axis
plt.show() # specifies end of graph
 
#plot for the TEST
  
plt.scatter(X_test, y_test, color='red') 
plt.plot(X_train, regressor.predict(X_train), color='blue') # plotting the regression line
plt.title("Salary vs Experience (Testing set)")
  
plt.xlabel("Years of experience") 
plt.ylabel("Salaries") 
plt.show() 



Q. 3		Using nodejs create a web page to read two file names from user and append contents of first file into second file.

assi5.js
npm install prompt

var http = require('http');

var prompt = require('prompt-sync')({sigint: true});
var fs = require('fs');

http.createServer(function(req,res) {

    var file1 = prompt("Enter 1st filename with extension : ");
    var file2 = prompt("Enter 2nd filename with extension : ");
    fs.readFile(file2,function(err,data) {
        if(err) {
            console.log("ERROR",err);
        }
        else {
            fs.appendFile(file1,data,function(err,data) {
                if (err) {
                    console.log("Error",err);
                }
                else {
                    console.log("\nFile Contents of "+file1+" after append:\n",
                    fs.readFileSync(file1, "utf8"));
                }
            });
            res.end();
        }
    });
}).listen(8002);
console.log('Node.js web server at port 8002 is running..')

***my code***

var fs = require('fs');
console.log("\nFile Contents of file before append:");
var a = fs.readFileSync("file1.txt", "utf8");
fs.appendFile("file2.txt", a, function(err){
    if (err)
        console.log(err);
    else {
        console.log("\nFile Contents of file after append:",
        fs.readFileSync("file2.txt", "utf8"));
    }
});
